[build-system]
requires = [
    "setuptools>=60",
    "wheel",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[project]
name = "tehom"
description = "Transform underwater acoustic data into training data for machine learning."
readme = "README.md"
authors = [
  {name = "Jake Stevens-Haas", email = "jacob.stevens.haas@gmail.com"}
]
license = {text = "AGPL"}
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering",
  "Topic :: Multimedia :: Sound/Audio",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
  "pandas",
  "matplotlib",
  "numpy",
  "plotly",
  # onc has unstable versioning, pin it.
  "onc==2.3.5",
  "sqlalchemy",
  "spans",
  "requests",
  "nbformat~=5.7",
]
"requires-python" = ">=3.7"
dynamic = ["version"]


[project.urls]
"Bug Tracker" = "https://github.com/Jacob-Stevens-Haas/tehom/issues"
"Documentation" = "https://tehom.readthedocs.io/en/latest/"
"Source Code" = "https://github.com/Jacob-Stevens-Haas/tehom"

[project.scripts]
tehom = "tehom.__init__:__main__"

# setuptools-specified tables
[project.optional-dependencies]
dev = [
  "coverage",
  "black",
  "flake8",
  "flake8-comprehensions",
  "isort",
  "pre-commit",
  "pip",
  "pytest",
  "twine",
  "wheel",
  "build~=0.9"
]
docs = [
  "sphinx==6.0.0",
  "sphinxcontrib-apidoc",
]

[tool.setuptools]
platforms = ["any"]
zip-safe = false
include-package-data = false

[tool.setuptools_scm]

[tool.black]
target-version = ['py37', 'py38', 'py39']
verbose = 0
preview = 1
line-length = 88
force-exclude = '''
(
    asv/env
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | env
  | docs
  | _version.py
  | setup.py
)
'''


[tool.pytest.ini_options]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]
testpaths = [
  "tehom",
]

[tool.coverage.run]
source = ["tehom"]
omit = [
  "**/__init__.py",
  "**/_version.py",
  "**/tests/*",
]

[tool.isort]
profile = "black"
verbose = true
force_alphabetical_sort_within_sections = true
use_parentheses = true
lines_between_types = 1
only_sections = true
extend_skip = [
  "env",
  "versioneer.py",
  "docs",
  "_version.py",
  "setup.py"
]
